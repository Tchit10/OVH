version: '3.8'
services:
  reverse-proxy:
    image: traefik:latest
    container_name: treafik
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik.yml:/etc/traefik/traefik.yml:ro
      - ./conf:/etc/traefik/config/:ro
      - ./ssl:/letsencrypt
    networks:
      - traefik

  portainer:
    image: portainer/portainer:latest
    container_name: portainer
    command: -H unix:///var/run/docker.sock
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.portainer-front.rule=Host(`portainer.tchit.ovh`)"
      - "traefik.http.routers.portainer-front.middlewares=SecHeader@file"
      - "traefik.http.services.portainer-front.loadbalancer.server.port=9000"
      - "traefik.http.routers.portainer-front-https.rule=Host(`portainer.tchit.ovh`)"
      - "traefik.http.routers.portainer-front-https.middlewares=SecHeader@file"
      - "traefik.http.routers.portainer-front-https.entrypoints=https"
      - "traefik.http.routers.portainer-front-https.tls=true"
      - "traefik.http.routers.portainer-front-https.tls.certresolver=myhttpchallenge"
      - "traefik.http.routers.portainer-edge.rule=Host(`portainer.tchit.ovh`)"
      - "traefik.http.routers.portainer-edge.middlewares=SecHeader@file"
      - "traefik.http.services.portainer-edge.loadbalancer.server.port=8000"
      - "traefik.http.routers.portainer-edge-https.rule=Host(`portainer.tchit.ovh`)"
      - "traefik.http.routers.portainer-edge-https.middlewares=SecHeader@file"
      - "traefik.http.routers.portainer-edge-https.entrypoints=https"
      - "traefik.http.routers.portainer-edge-https.tls=true"
      - "traefik.http.routers.portainer-edge-https.tls.certresolver=myhttpchallenge"
    networks:
      - traefik
    volumes:
      - portainer-data:/data
      - /var/run/docker.sock:/var/run/docker.sock

  whoami:
    image: containous/whoami:latest
    container_name: whoami
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.rule=Host(`vps.tchit.ovh`)"
      - "traefik.http.routers.whoami.middlewares=SecHeader@file"
      - "traefik.http.services.whoami.loadbalancer.server.port=80"
      - "traefik.http.routers.whoami-https.rule=Host(`vps.tchit.ovh`)"
      - "traefik.http.routers.whoami-https.middlewares=SecHeader@file"
      - "traefik.http.routers.whoami-https.entrypoints=https"
      - "traefik.http.routers.whoami-https.tls=true"
      - "traefik.http.routers.whoami-https.tls.certresolver=myhttpchallenge"
      #- "traefik.http.middlewares.myAdmin.ipWhiteList.sourceRange=148.196.132.30"
      #- "traefik.http.routers.whoami.middlewares=myAdmin@docker"
    networks:
      - traefik

  ghost:
    image: ghost:latest
    restart: always
    container_name: ghost
    env_file:
      - ./.env_ghost
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik"
      - "traefik.http.routers.monblog.rule=Host(`ghost.tchit.ovh`)"
      - "traefik.http.routers.monblog.middlewares=SecHeader@file"
      - "traefik.http.services.monblog.loadbalancer.server.port=2368"
      - "traefik.http.routers.monblog-https.rule=Host(`ghost.tchit.ovh`)"
      - "traefik.http.routers.monblog-https.middlewares=SecHeader@file"
      - "traefik.http.routers.monblog-https.entrypoints=https"
      - "traefik.http.routers.monblog-https.tls=true"
      - "traefik.http.routers.monblog-https.tls.certresolver=myhttpchallenge"
      #- "traefik.http.middlewares.myAdmin.ipWhiteList.sourceRange=148.196.132.30"
      #- "traefik.http.routers.monblog.middlewares=myAdmin@docker"
    volumes:
      - www-data:/var/lib/ghost/content
    networks:
      - traefik
      - lan

  db:
    image: mysql:5.7
    container_name: mysql
    env_file:
      - ./.env_db
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - lan

volumes:
  mysql-data:
    name: mysql-data
    #driver: local
    driver_opts:
      type: none
      device: /home/debian/OVH/ghost/mysql-data
      o: bind

  www-data:
    name: www-data
    #driver: local
    driver_opts:
      type: none
      device: /home/debian/OVH/ghost/www-data
      o: bind

  portainer-data:
    name: portainer-data
    #driver: local
    driver_opts:
      type: none
      device: /home/debian/OVH/portainer/portainer-data
      o: bind

networks:
  lan:
    name: lan

  traefik:
    name: traefik
